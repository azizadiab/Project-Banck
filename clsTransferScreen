#pragma once
#include <iostream>
#include "clsScreen.h"
#include "clsInputValidate.h"
#include "clsPerson.h"
#include "clsBankClient.h"
class clsTransferScreen :protected clsScreen

{

private:

	static string _ReadAccountNumber()
	{
		string AccountNumber;

		AccountNumber = clsInputValidate::ReadString();
		while (!clsBankClient::IsClientExist(AccountNumber))
		{
			cout << "\nThis Account Number is Not Fount, choose another one: ";
			AccountNumber = clsInputValidate::ReadString();
		}
		return AccountNumber;
	}

	static void _PrintClient(clsBankClient Client)
	{
		cout << "\nClient Card: ";
		cout << "\n____________________";
		cout << "\nFull Name:  " << Client.FullName();
		cout << "\nAcc Number: " << Client.AccountNumber();
		cout << "\nBalance:    " << Client.AccountBalance;
		cout << "\n____________________";
	}

	static float _ReadAmount(clsBankClient SourceClient)
	{
		float Amount;
		Amount = clsInputValidate::ReadFloatNumber();
		while (Amount > SourceClient.AccountBalance)
		{
			cout << "\nAmount Exceeds the available Balance, Enter another Amount ? ";
			Amount = clsInputValidate::ReadFloatNumber();
		}
		return Amount;
	}


public:

	static void ShowTransferScreen()
	{
		_DrawScreenHeader("\tTransfer Screen ");

		cout << "\nPlease Enter Account Number to Transfer From: ";
		clsBankClient SourceClient = clsBankClient::Find(_ReadAccountNumber());
		_PrintClient(SourceClient);

		cout << "\n\nPlease Enter Account Number to Transfer To: ";
		clsBankClient DestinationClient = clsBankClient::Find(_ReadAccountNumber());
		_PrintClient(DestinationClient);


		cout << "\n\nEnter Transfer Amount: ";
		float Amount = _ReadAmount(SourceClient);

		cout << "\nAre you sure you want to perform this operation? y/n? ";
		char Answer = 'n';
		cin >> Answer;
		if (Answer == 'Y' || Answer == 'y')

		{

			if (SourceClient.Transfer(Amount, DestinationClient, CurrentUser.UserName))
			{
				cout << "\nTransfer done successfully:\n";

			}
			else
			{
				cout << "\nTransfer Failed \n";
			}

		}
		_PrintClient(SourceClient);
		_PrintClient(DestinationClient);
	}

};


