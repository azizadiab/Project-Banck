#pragma once
#include <iostream>
#include "clsScreen.h"
#include "clsBankClient.h"
#include "clsInputValidate.h"
using namespace std;
class clsUpdateClientScreen : protected clsScreen
{
private:

	static void ReadClientInfo(clsBankClient& Client)
	{
		cout << "\Enter FirstName ";
		Client.FirstName = clsInputValidate::ReadString();

		cout << "\Enter LastName ";
		Client.LastName = clsInputValidate::ReadString();

		cout << "\Enter Email ";
		Client.Email = clsInputValidate::ReadString();

		cout << "\Enter Phone ";
		Client.Phone = clsInputValidate::ReadString();

		cout << "\Enter Pincode ";
		Client.PinCode = clsInputValidate::ReadString();

		cout << "\Enter Account Balance ";
		Client.AccountBalance = clsInputValidate::ReadFloatNumber();
	}

	static void _PrintClient(clsBankClient Client)
	{

		cout << "\nClient Card:";
		cout << "\n___________________";
		cout << "\nFirstName   : " << Client.FirstName;
		cout << "\nLastName    : " << Client.LastName;
		cout << "\nFull Name   : " << Client.FullName();
		cout << "\nEmail       : " << Client.Email;
		cout << "\nPhone       : " << Client.Phone;
		cout << "\nAcc. Number : " << Client.AccountNumber();
		cout << "\nPassword    : " << Client.PinCode;
		cout << "\nBalance     : " << Client.AccountBalance;
		cout << "\n___________________\n";
	}

public:
	static void ShowUpdateClientScreen()
	{
		if (!CheckAccessRights(clsUser::enPermissions::pUpdateClients))
		{
			return;// this will exit the function and it will not continue
		}
		
		_DrawScreenHeader("\tUpdate Client Screen ");
		string AccountNumber = "";
		cout << "\nPlease Eenter client Account Number: ";
		AccountNumber = clsInputValidate::ReadString();
		while (!clsBankClient::IsClientExist(AccountNumber))
		{
			cout << "\nAccount number is not found, choose another one: ";
			AccountNumber = clsInputValidate::ReadString();

		}
		clsBankClient Client = clsBankClient::Find(AccountNumber);
		_PrintClient(Client);
		cout << "\nAre you sure you want to update this client y/n? ";
		char Answer = 'n';
		cin >> Answer;
		if (Answer == 'Y' || Answer == 'y')
		{
			cout << "\n\nUpdate Client Info:";
			cout << "\n____________________\n";

			ReadClientInfo(Client);
			clsBankClient::enSaveRsults SaveResult;
			SaveResult = Client.Save();

			switch (SaveResult)
			{
			case clsBankClient::enSaveRsults::saSucceeded:
			{
				cout << "\nAccount Updated Successfully :-)\n";
				_PrintClient(Client);
				break;
			}
			case clsBankClient::enSaveRsults::saFaildEmpyedObject:
			{
				cout << "\nError account was not saved because it's Empty";
				break;
			}
			}
		}
			
	}

};


