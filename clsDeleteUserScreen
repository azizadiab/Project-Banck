#pragma once
#include <iostream>
#include "clsScreen.h"
#include "clsUser.h"
#include "clsInputValidate.h"
#include "clsPerson.h"

using namespace std;
class clsDeleteUserScreen :protected clsScreen
{

private:

	static void _PrintUser(clsUser User)
	{
		cout << "\nUser Card:";
		cout << "\n___________________";
		cout << "\nFirstName   : " << User.FirstName;
		cout << "\nLastName    : " << User.LastName;
		cout << "\nFull Name   : " << User.FullName();
		cout << "\nEmail       : " << User.Email;
		cout << "\nPhone       : " << User.Phone;
		cout << "\nAcc. Number : " << User.UserName;
		cout << "\nPassword    : " << User.Password;
		cout << "\nPermissions : " << User.Permissions;
		cout << "\n___________________\n";

	}

public:

	static void ShowDeleteUserScreen()
	{
		_DrawScreenHeader("\tDelete User Screen ");
		string UserName = "";

		cout << "\nPlease Enter USerName? ";
		UserName = clsInputValidate::ReadString();
		while (!clsUser::IsUserExist(UserName))
		{
			cout << "\n User is not Found Choose Another One? ";
			UserName = clsInputValidate::ReadString();
		}
		clsUser User1 = clsUser::Find(UserName);
		_PrintUser(User1);
		cout << "\nAre You Sure You Want To Delete This? n/y";
		char Anser = 'n';
		cin >> Anser;
		if (Anser == 'y' || Anser == 'Y')
		{
			if (User1.Delete())
			{
				cout << "\nDelete Succeeted ";
				_PrintUser(User1);
			}
			else
			{
				cout << "\nFailed";
			}
		}
	}

};


